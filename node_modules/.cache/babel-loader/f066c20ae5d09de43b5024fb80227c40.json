{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\danon\\\\Source\\\\Repos\\\\React_sandbox\\\\club\\\\src\\\\InterestList.js\";\nimport React, { Component } from 'react';\n\nconst Interest = ({\n  body\n}) => {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5\n    },\n    __self: this\n  }, body.map(interest => {\n    const Interest_ID = interest.Interest_ID,\n          Topic = interest.Topic;\n    return React.createElement(\"div\", {\n      key: Interest_ID,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10\n      },\n      __self: this\n    }, Topic), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    }));\n  }));\n};\n\nexport default class InterestList extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isLoading: true,\n      interests: [],\n      error: null\n    };\n  }\n\n  fetchInterest() {\n    fetch(\"http://localhost:46204/odata/Interests\").then(res => res.json()).then(result => {\n      console.log(result.value);\n      this.setState({\n        interests: result.value\n      }); //interests = result.value;\n      //console.log('Interests:')\n      //console.log(interests)\n    });\n  }\n\n  fetchPosts() {\n    // The API where we're fetching data from\n    fetch(\"http://localhost:46204/odata/Interests\") // We get a response and receive the data in JSON format...\n    .then(response => response.json()) // ...then we update the state of our application\n    .then(data => this.setState({\n      posts: data,\n      isLoading: false\n    })) // If we catch errors instead of a response, let's update the app\n    .catch(error => this.setState({\n      error,\n      isLoading: false\n    }));\n  }\n\n  componentDidMount() {\n    this.fetchInterest();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \"React Fetch - Blog\"), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }), !isLoading ? Object.keys(interests).map(key => React.createElement(Interest, {\n      key: key,\n      body: interests[key],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    })) : React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"Loading...\"));\n  }\n\n}","map":{"version":3,"sources":["C:\\Users\\danon\\Source\\Repos\\React_sandbox\\club\\src\\InterestList.js"],"names":["React","Component","Interest","body","map","interest","Interest_ID","Topic","InterestList","state","isLoading","interests","error","fetchInterest","fetch","then","res","json","result","console","log","value","setState","fetchPosts","response","data","posts","catch","componentDidMount","render","Object","keys","key"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AAC7B,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,IAAI,CAACC,GAAL,CAASC,QAAQ,IAAI;AAAA,UACZC,WADY,GACWD,QADX,CACZC,WADY;AAAA,UACCC,KADD,GACWF,QADX,CACCE,KADD;AAEpB,WACE;AAAK,MAAA,GAAG,EAAED,WAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKC,KAAL,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF;AAMD,GARA,CADH,CADF;AAaD,CAdD;;AAgBA,eAAe,MAAMC,YAAN,SAA2BP,SAA3B,CAAqC;AAAA;AAAA;AAAA,SAClDQ,KADkD,GAC1C;AACNC,MAAAA,SAAS,EAAE,IADL;AAENC,MAAAA,SAAS,EAAE,EAFL;AAGNC,MAAAA,KAAK,EAAE;AAHD,KAD0C;AAAA;;AAMlDC,EAAAA,aAAa,GAAE;AACbC,IAAAA,KAAK,CAAC,wCAAD,CAAL,CACCC,IADD,CACMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADb,EAECF,IAFD,CAGGG,MAAD,IAAY;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAYF,MAAM,CAACG,KAAnB;AACA,WAAKC,QAAL,CAAc;AAACX,QAAAA,SAAS,EAACO,MAAM,CAACG;AAAlB,OAAd,EAFU,CAGV;AACA;AACA;AACD,KATH;AAUC;;AAEDE,EAAAA,UAAU,GAAG;AACX;AACAT,IAAAA,KAAK,0CAAL,CACE;AADF,KAEGC,IAFH,CAEQS,QAAQ,IAAIA,QAAQ,CAACP,IAAT,EAFpB,EAGE;AAHF,KAIGF,IAJH,CAKIU,IAAI,IACF,KAAKH,QAAL,CAAc;AACZI,MAAAA,KAAK,EAAED,IADK;AAEZf,MAAAA,SAAS,EAAE;AAFC,KAAd,CANN,EAWE;AAXF,KAYGiB,KAZH,CAYSf,KAAK,IAAI,KAAKU,QAAL,CAAc;AAAEV,MAAAA,KAAF;AAASF,MAAAA,SAAS,EAAE;AAApB,KAAd,CAZlB;AAaD;;AAEDkB,EAAAA,iBAAiB,GAAG;AAClB,SAAKf,aAAL;AACD;;AACCgB,EAAAA,MAAM,GAAG;AAEL,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADL,EAEK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFL,EAIM,CAACnB,SAAD,GACAoB,MAAM,CAACC,IAAP,CAAYpB,SAAZ,EAAuBP,GAAvB,CAA2B4B,GAAG,IAAI,oBAAC,QAAD;AAAU,MAAA,GAAG,EAAEA,GAAf;AAAoB,MAAA,IAAI,EAAErB,SAAS,CAACqB,GAAD,CAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAlC,CADA,GAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBANR,CADF;AAWP;;AApDiD","sourcesContent":["import React, { Component } from 'react'\r\n\r\nconst Interest = ({ body }) => {\r\n  return (\r\n    <div>\r\n      {body.map(interest => {\r\n        const { Interest_ID, Topic } = interest;\r\n        return (\r\n          <div key={Interest_ID}>\r\n            <h2>{Topic}</h2>\r\n            <hr />\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default class InterestList extends Component { //App\r\n  state = {\r\n    isLoading: true,\r\n    interests: [],\r\n    error: null\r\n  }\r\n  fetchInterest(){\r\n    fetch(\"http://localhost:46204/odata/Interests\")\r\n    .then(res => res.json())\r\n    .then(\r\n      (result) => {\r\n        console.log(result.value)\r\n        this.setState({interests:result.value});\r\n        //interests = result.value;\r\n        //console.log('Interests:')\r\n        //console.log(interests)\r\n      })\r\n    }\r\n\r\n    fetchPosts() {\r\n      // The API where we're fetching data from\r\n      fetch(`http://localhost:46204/odata/Interests`)\r\n        // We get a response and receive the data in JSON format...\r\n        .then(response => response.json())\r\n        // ...then we update the state of our application\r\n        .then(\r\n          data =>\r\n            this.setState({\r\n              posts: data,\r\n              isLoading: false,\r\n            })\r\n        )\r\n        // If we catch errors instead of a response, let's update the app\r\n        .catch(error => this.setState({ error, isLoading: false }));\r\n    }\r\n  \r\n    componentDidMount() {\r\n      this.fetchInterest();\r\n    }\r\n      render() {\r\n        \r\n          return (\r\n            <div>\r\n                 <h1>React Fetch - Blog</h1>\r\n                 <hr />\r\n                  {\r\n                  !isLoading ? \r\n                  Object.keys(interests).map(key => <Interest key={key} body={interests[key]} />) \r\n                  : <h3>Loading...</h3>\r\n                  }\r\n            </div>\r\n          )\r\n  }\r\n}\r\n\r\n\r\n\r\n \r\n  \r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}